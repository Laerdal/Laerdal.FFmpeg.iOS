<Project Sdk="MSBuild.Sdk.Extras/2.0.54">

    <!-- VARIABLES -->
    <PropertyGroup>
        <NugetPackageVariantName>Unset</NugetPackageVariantName>
        <ExternalLibraries>-</ExternalLibraries>
    </PropertyGroup>

    <!-- IOS -->
    <PropertyGroup>
        <TargetFrameworks>Xamarin.iOS10</TargetFrameworks>
        <IsBindingProject>true</IsBindingProject>

        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
        <Optimize>false</Optimize>
        <OutputPath>bin</OutputPath>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <MTouchExtraArgs>-v -v -v -v</MTouchExtraArgs>
    </PropertyGroup>

    <PropertyGroup>
        <RootNamespace>Laerdal.Xamarin.FFmpeg.iOS</RootNamespace>

        <PackageId>Laerdal.Xamarin.FFmpeg.iOS.$(NugetPackageVariantName)</PackageId>
        <PackageTags>Xamarin;FFmpeg;iOS;$(NugetPackageVariantName)</PackageTags>
        <PackageDescription>Xamarin wrapper around mobile-ffmpeg for iOS. External libraries: $(ExternalLibraries). Based on https://github.com/tanersener/mobile-ffmpeg</PackageDescription>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.Xamarin.FFmpeg.iOS</PackageProjectUrl>
        <PackageVersion>1.0.0</PackageVersion>
        <PackageOutputPath>../$(RootNamespace).Output</PackageOutputPath>
        <PackageIcon>icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>

        <!-- <PackOnBuild>true</PackOnBuild> -->
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Laerdal.Xamarin.FFmpeg.iOS</AssemblyName>

        <Title>Laerdal.Xamarin.FFmpeg.iOS.$(NugetPackageVariantName)</Title>
        <Summary>Xamarin FFmpeg iOS $(NugetPackageVariantName)</Summary>
        <Description>Xamarin wrapper around mobile-ffmpeg for iOS. External libraries: $(ExternalLibraries). Based on https://github.com/tanersener/mobile-ffmpeg</Description>
        <Authors>François Raminosona, Laerdal</Authors>
        <Owners>François Raminosona, Laerdal</Owners>
        <Copyright>François Raminosona, Laerdal</Copyright>
        <RepositoryUrl>https://github.com/Laerdal/Laerdal.Xamarin.FFmpeg.iOS.git</RepositoryUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <RepositoryType>git</RepositoryType>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>

        <!-- see : https://cezarypiatek.github.io/post/managing-output-in-sdk-projects/ -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <!-- warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName. -->
        <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB9004</MSBuildWarningsAsMessages>
    </PropertyGroup>
    <ItemGroup>
        <Compile Include="Properties\AssemblyInfo.cs" />
        <!-- <Compile Include="LinkerSafeAttribute.cs" /> -->
        <None Include="../icon.png" Pack="true" PackagePath="\"/>
        <None Include="../LICENSE" Pack="true" PackagePath="\"/>
    </ItemGroup>
    <ItemGroup>
        <Reference Include="Xamarin.iOS" />
    </ItemGroup>
    <ItemGroup>
        <ObjcBindingCoreSource Include="StructsAndEnums.cs" />
        <ObjcBindingApiDefinition Include="ApiDefinitions.cs" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Xamarin.iOS.SwiftRuntimeSupport" Version="0.2.0" />
    </ItemGroup>

    <!-- Frameworks\libavcodec.framework -->
    <ItemGroup Condition="Exists('Frameworks\libavcodec.framework')">
        <None Include="Frameworks\libavcodec.framework\libavcodec">
            <Link>Frameworks\libavcodec.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libavcodec.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
            <Frameworks>AudioToolbox VideoToolbox CoreVideo</Frameworks>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libavutil.framework -->
    <ItemGroup Condition="Exists('Frameworks\libavutil.framework')">
        <None Include="Frameworks\libavutil.framework\libavutil">
            <Link>Frameworks\libavutil.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libavutil.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
            <Frameworks>VideoToolbox CoreVideo</Frameworks>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\mobileffmpeg.framework -->
    <ItemGroup Condition="Exists('Frameworks\mobileffmpeg.framework')">
        <None Include="Frameworks\mobileffmpeg.framework\mobileffmpeg">
            <Link>Frameworks\mobileffmpeg.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\mobileffmpeg.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
            <Frameworks>VideoToolbox CoreVideo</Frameworks>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libavformat.framework -->
    <ItemGroup Condition="Exists('Frameworks\libavformat.framework')">
        <None Include="Frameworks\libavformat.framework\libavformat">
            <Link>Frameworks\libavformat.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libavformat.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
            <LinkerFlags>-lbz2</LinkerFlags>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\snappy.framework -->
    <ItemGroup Condition="Exists('Frameworks\snappy.framework')">
        <None Include="Frameworks\snappy.framework\snappy">
            <Link>Frameworks\snappy.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\snappy.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
            <LinkerFlags>-lc++ -lz</LinkerFlags>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\expat.framework -->
    <ItemGroup Condition="Exists('Frameworks\expat.framework')">
        <None Include="Frameworks\expat.framework\expat">
            <Link>Frameworks\expat.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\expat.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\jpeg.framework -->
    <ItemGroup Condition="Exists('Frameworks\jpeg.framework')">
        <None Include="Frameworks\jpeg.framework\jpeg">
            <Link>Frameworks\jpeg.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\jpeg.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libavfilter.framework -->
    <ItemGroup Condition="Exists('Frameworks\libavfilter.framework')">
        <None Include="Frameworks\libavfilter.framework\libavfilter">
            <Link>Frameworks\libavfilter.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libavfilter.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libopencore-amrnb.framework -->
    <ItemGroup Condition="Exists('Frameworks\libopencore-amrnb.framework')">
        <None Include="Frameworks\libopencore-amrnb.framework\libopencore-amrnb">
            <Link>Frameworks\libopencore-amrnb.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libopencore-amrnb.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libtheoraenc.framework -->
    <ItemGroup Condition="Exists('Frameworks\libtheoraenc.framework')">
        <None Include="Frameworks\libtheoraenc.framework\libtheoraenc">
            <Link>Frameworks\libtheoraenc.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libtheoraenc.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libwebpdemux.framework -->
    <ItemGroup Condition="Exists('Frameworks\libwebpdemux.framework')">
        <None Include="Frameworks\libwebpdemux.framework\libwebpdemux">
            <Link>Frameworks\libwebpdemux.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libwebpdemux.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\soxr.framework -->
    <ItemGroup Condition="Exists('Frameworks\soxr.framework')">
        <None Include="Frameworks\soxr.framework\soxr">
            <Link>Frameworks\soxr.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\soxr.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\x265.framework -->
    <ItemGroup Condition="Exists('Frameworks\x265.framework')">
        <None Include="Frameworks\x265.framework\x265">
            <Link>Frameworks\x265.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\x265.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\fontconfig.framework -->
    <ItemGroup Condition="Exists('Frameworks\fontconfig.framework')">
        <None Include="Frameworks\fontconfig.framework\fontconfig">
            <Link>Frameworks\fontconfig.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\fontconfig.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\kvazaar.framework -->
    <ItemGroup Condition="Exists('Frameworks\kvazaar.framework')">
        <None Include="Frameworks\kvazaar.framework\kvazaar">
            <Link>Frameworks\kvazaar.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\kvazaar.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libpng.framework -->
    <ItemGroup Condition="Exists('Frameworks\libpng.framework')">
        <None Include="Frameworks\libpng.framework\libpng">
            <Link>Frameworks\libpng.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libpng.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libvidstab.framework -->
    <ItemGroup Condition="Exists('Frameworks\libvidstab.framework')">
        <None Include="Frameworks\libvidstab.framework\libvidstab">
            <Link>Frameworks\libvidstab.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libvidstab.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libwebpmux.framework -->
    <ItemGroup Condition="Exists('Frameworks\libwebpmux.framework')">
        <None Include="Frameworks\libwebpmux.framework\libwebpmux">
            <Link>Frameworks\libwebpmux.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libwebpmux.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\speex.framework -->
    <ItemGroup Condition="Exists('Frameworks\speex.framework')">
        <None Include="Frameworks\speex.framework\speex">
            <Link>Frameworks\speex.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\speex.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\xvidcore.framework -->
    <ItemGroup Condition="Exists('Frameworks\xvidcore.framework')">
        <None Include="Frameworks\xvidcore.framework\xvidcore">
            <Link>Frameworks\xvidcore.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\xvidcore.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\freetype.framework -->
    <ItemGroup Condition="Exists('Frameworks\freetype.framework')">
        <None Include="Frameworks\freetype.framework\freetype">
            <Link>Frameworks\freetype.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\freetype.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\lame.framework -->
    <ItemGroup Condition="Exists('Frameworks\lame.framework')">
        <None Include="Frameworks\lame.framework\lame">
            <Link>Frameworks\lame.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\lame.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libsndfile.framework -->
    <ItemGroup Condition="Exists('Frameworks\libsndfile.framework')">
        <None Include="Frameworks\libsndfile.framework\libsndfile">
            <Link>Frameworks\libsndfile.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libsndfile.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libvorbis.framework -->
    <ItemGroup Condition="Exists('Frameworks\libvorbis.framework')">
        <None Include="Frameworks\libvorbis.framework\libvorbis">
            <Link>Frameworks\libvorbis.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libvorbis.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libxml2.framework -->
    <ItemGroup Condition="Exists('Frameworks\libxml2.framework')">
        <None Include="Frameworks\libxml2.framework\libxml2">
            <Link>Frameworks\libxml2.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libxml2.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\tiff.framework -->
    <ItemGroup Condition="Exists('Frameworks\tiff.framework')">
        <None Include="Frameworks\tiff.framework\tiff">
            <Link>Frameworks\tiff.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\tiff.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\fribidi.framework -->
    <ItemGroup Condition="Exists('Frameworks\fribidi.framework')">
        <None Include="Frameworks\fribidi.framework\fribidi">
            <Link>Frameworks\fribidi.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\fribidi.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libaom.framework -->
    <ItemGroup Condition="Exists('Frameworks\libaom.framework')">
        <None Include="Frameworks\libaom.framework\libaom">
            <Link>Frameworks\libaom.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libaom.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libhogweed.framework -->
    <ItemGroup Condition="Exists('Frameworks\libhogweed.framework')">
        <None Include="Frameworks\libhogweed.framework\libhogweed">
            <Link>Frameworks\libhogweed.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libhogweed.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libswresample.framework -->
    <ItemGroup Condition="Exists('Frameworks\libswresample.framework')">
        <None Include="Frameworks\libswresample.framework\libswresample">
            <Link>Frameworks\libswresample.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libswresample.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libvorbisenc.framework -->
    <ItemGroup Condition="Exists('Frameworks\libvorbisenc.framework')">
        <None Include="Frameworks\libvorbisenc.framework\libvorbisenc">
            <Link>Frameworks\libvorbisenc.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libvorbisenc.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\twolame.framework -->
    <ItemGroup Condition="Exists('Frameworks\twolame.framework')">
        <None Include="Frameworks\twolame.framework\twolame">
            <Link>Frameworks\twolame.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\twolame.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\giflib.framework -->
    <ItemGroup Condition="Exists('Frameworks\giflib.framework')">
        <None Include="Frameworks\giflib.framework\giflib">
            <Link>Frameworks\giflib.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\giflib.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libass.framework -->
    <ItemGroup Condition="Exists('Frameworks\libass.framework')">
        <None Include="Frameworks\libass.framework\libass">
            <Link>Frameworks\libass.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libass.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libilbc.framework -->
    <ItemGroup Condition="Exists('Frameworks\libilbc.framework')">
        <None Include="Frameworks\libilbc.framework\libilbc">
            <Link>Frameworks\libilbc.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libilbc.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libswscale.framework -->
    <ItemGroup Condition="Exists('Frameworks\libswscale.framework')">
        <None Include="Frameworks\libswscale.framework\libswscale">
            <Link>Frameworks\libswscale.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libswscale.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libvorbisfile.framework -->
    <ItemGroup Condition="Exists('Frameworks\libvorbisfile.framework')">
        <None Include="Frameworks\libvorbisfile.framework\libvorbisfile">
            <Link>Frameworks\libvorbisfile.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libvorbisfile.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\opus.framework -->
    <ItemGroup Condition="Exists('Frameworks\opus.framework')">
        <None Include="Frameworks\opus.framework\opus">
            <Link>Frameworks\opus.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\opus.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\vo-amrwbenc.framework -->
    <ItemGroup Condition="Exists('Frameworks\vo-amrwbenc.framework')">
        <None Include="Frameworks\vo-amrwbenc.framework\vo-amrwbenc">
            <Link>Frameworks\vo-amrwbenc.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\vo-amrwbenc.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\gmp.framework -->
    <ItemGroup Condition="Exists('Frameworks\gmp.framework')">
        <None Include="Frameworks\gmp.framework\gmp">
            <Link>Frameworks\gmp.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\gmp.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libnettle.framework -->
    <ItemGroup Condition="Exists('Frameworks\libnettle.framework')">
        <None Include="Frameworks\libnettle.framework\libnettle">
            <Link>Frameworks\libnettle.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libnettle.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libtheora.framework -->
    <ItemGroup Condition="Exists('Frameworks\libtheora.framework')">
        <None Include="Frameworks\libtheora.framework\libtheora">
            <Link>Frameworks\libtheora.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libtheora.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libvpx.framework -->
    <ItemGroup Condition="Exists('Frameworks\libvpx.framework')">
        <None Include="Frameworks\libvpx.framework\libvpx">
            <Link>Frameworks\libvpx.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libvpx.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\shine.framework -->
    <ItemGroup Condition="Exists('Frameworks\shine.framework')">
        <None Include="Frameworks\shine.framework\shine">
            <Link>Frameworks\shine.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\shine.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\wavpack.framework -->
    <ItemGroup Condition="Exists('Frameworks\wavpack.framework')">
        <None Include="Frameworks\wavpack.framework\wavpack">
            <Link>Frameworks\wavpack.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\wavpack.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\gnutls.framework -->
    <ItemGroup Condition="Exists('Frameworks\gnutls.framework')">
        <None Include="Frameworks\gnutls.framework\gnutls">
            <Link>Frameworks\gnutls.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\gnutls.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libavdevice.framework -->
    <ItemGroup Condition="Exists('Frameworks\libavdevice.framework')">
        <None Include="Frameworks\libavdevice.framework\libavdevice">
            <Link>Frameworks\libavdevice.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libavdevice.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libogg.framework -->
    <ItemGroup Condition="Exists('Frameworks\libogg.framework')">
        <None Include="Frameworks\libogg.framework\libogg">
            <Link>Frameworks\libogg.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libogg.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libtheoradec.framework -->
    <ItemGroup Condition="Exists('Frameworks\libtheoradec.framework')">
        <None Include="Frameworks\libtheoradec.framework\libtheoradec">
            <Link>Frameworks\libtheoradec.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libtheoradec.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\libwebp.framework -->
    <ItemGroup Condition="Exists('Frameworks\libwebp.framework')">
        <None Include="Frameworks\libwebp.framework\libwebp">
            <Link>Frameworks\libwebp.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\libwebp.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>

    <!-- Frameworks\x264.framework -->
    <ItemGroup Condition="Exists('Frameworks\x264.framework')">
        <None Include="Frameworks\x264.framework\x264">
            <Link>Frameworks\x264.framework</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>

        <NativeReference Include="Frameworks\x264.framework">
            <Kind>Framework</Kind>
            <SmartLink>True</SmartLink>
            <ForceLoad>True</ForceLoad>
        </NativeReference>
    </ItemGroup>
</Project>